services:
  backend:
    image: ${BACKEND_IMAGE_NAME:-ghcr.io/highlight/highlight-backend:docker-v0.5.2}
    container_name: backend
    restart: on-failure
    expose: ["8082"]
    env_file: .env
    volumes:
      - highlight-data:/highlight-data
      - ../backend/env.enc:/build/env.enc
      - ../backend/env.enc.dgst:/build/env.enc.dgst
    labels:
      - traefik.enable=true
      - traefik.http.routers.highlight-backend.rule=Host(`${FQDN}`) && PathPrefix(`/api`)
      - traefik.http.routers.highlight-backend.entrypoints=websecure
      - traefik.http.routers.highlight-backend.tls=true
      - traefik.http.middlewares.api-strip.stripprefix.prefixes=/api
      - traefik.http.routers.highlight-backend.middlewares=api-strip@docker
      - traefik.http.services.highlight-backend.loadbalancer.server.port=8082
      - traefik.docker.network=highlight
    networks: [highlight, highlight-proxy]

  frontend:
    image: ${FRONTEND_IMAGE_NAME:-ghcr.io/highlight/highlight-frontend:docker-v0.5.2}
    container_name: frontend
    restart: on-failure
    expose: ["3000"]
    env_file: .env
    labels:
      - traefik.enable=true
      - traefik.http.routers.highlight-frontend.rule=Host(`${FQDN}`)
      - traefik.http.routers.highlight-frontend.entrypoints=websecure
      - traefik.http.routers.highlight-frontend.tls=true
      - traefik.http.services.highlight-frontend.loadbalancer.server.port=3000
      - traefik.docker.network=highlight
    networks: [highlight, highlight-proxy]

volumes:
  highlight-data:

networks:
  highlight:
    external: true
  highlight-proxy:
    external: true
